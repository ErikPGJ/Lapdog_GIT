%
% Writes the first list of variables (key-value pairs) to an LBL file, before the OBJECT = TABLE etc.
%
% NOTE: Always interprets kvl.value{i} as (matlab) string, not number.
% NOTE: Always prints exact string, without adding quotes.
%
%
function write_LBL_header(fid, kvl)   % kvl = key-value list
% PROPOSAL: Take parameter TAB_file_path ==> Set RECORD_BYTES (file size), ^TABLE, (RECORDS?!!)
%
% PROPOSAL: Separate parameter for (overwrite) values for e.g. PRODUCT_TYPE, PROCESSING_LEVEL_ID and other values which are the same for all files.
%   CON: Could/should be part of kvl.
%   CON: Should sometimes overwrite a default list of kvl, sometimes complement it (merge).
% PROPOSAL: Set which keywords that should have quoted values or not.
% PROPOSAL: Error-check that all KEY_ORDER_LIST keys are unique.
% PROPOSAL: Should set keywords that apply to all LBL/CAT files (not just OBJECT=TABLE).
%    Ex: PDS_VERSION_ID
% PROPOSAL: Should require keywords that apply to all LBL/CAT files (not just OBJECT=TABLE).
%
% PROPOSAL: Determine which keywords should or should not have quotes. Force parameter values to not have quotes.
%    CON: Another long list which might not capture all keywords.
%
% PROPOSAL: Make *_key_order_list into parameters, or only the more context-dependent RPCLAP_KEY_ORDER_LIST.
%    PRO: Makes code more clear.
%    PRO: Makes code more reusable, also outside lapdog.
%       CON: Keyword ordering bugs are harmless.
%    CON: More complicated parameters that need to be initialised.
%       PRO: Would have to define new global variables in ~preamble.
% PROPOSAL: Make FORBIDDEN_KEYS to a parameter.
%    PRO: Makes code more clear.
%    PRO: Makes code more reusable, also outside lapdog.
%    CON: More complicated parameters that need to be initialised.
% PROPOSAL: Make *_key_order_list, FORBIDDEN_KEYS into parameters and create a wrapper function to set them.
    

% PROPOSAL: Order by groups.
%   Ex: General ODL/PDS. Mission_specific.

%=======================================================
% Keys which should preferably come in a certain order.
% Not all of them are required to be present.
%=======================================================
% Keywords which are quite independent of type of file.
GENERAL_KEY_ORDER_LIST = { ...
    'PDS_VERSION_ID', ...    % The PDS standard requires this to be first, I think.
    ...
    'RECORD_TYPE', ...
    'RECORD_BYTES', ...
    'FILE_RECORDS', ...
    'FILE_NAME', ...
    '^TABLE', ...
    'DATA_SET_ID', ...
    'DATA_SET_NAME', ...
    'DATA_QUALITY_ID', ...
    'MISSION_ID', ...
    'MISSION_NAME', ...
    'MISSION_PHASE_NAME', ...
    'PRODUCER_INSTITUTION_NAME', ...
    'PRODUCER_ID', ...
    'PRODUCER_FULL_NAME', ...
    'LABEL_REVISION_NOTE', ...
    'PRODUCT_ID', ...
    'PRODUCT_TYPE', ...
    'PRODUCT_CREATION_TIME', ...
    'INSTRUMENT_HOST_ID', ...
    'INSTRUMENT_HOST_NAME', ...
    'INSTRUMENT_NAME', ...
    'INSTRUMENT_ID', ...
    'INSTRUMENT_TYPE', ...
    'INSTRUMENT_MODE_ID', ...
    'INSTRUMENT_MODE_DESC', ...
    'TARGET_NAME', ...
    'TARGET_TYPE', ...
    'PROCESSING_LEVEL_ID', ...
    'START_TIME', ...
    'STOP_TIME', ...
    'SPACECRAFT_CLOCK_START_COUNT', ...
    'SPACECRAFT_CLOCK_STOP_COUNT', ...
    'DESCRIPTION'};
% Keywords which refer to very specific settings.
RPCLAP_KEY_ORDER_LIST = { ...
    'ROSETTA:LAP_TM_RATE', ...
    'ROSETTA:LAP_BOOTSTRAP', ...
    ...
    'ROSETTA:LAP_FEEDBACK_P1', ...
    'ROSETTA:LAP_P1_ADC20', ...
    'ROSETTA:LAP_P1_ADC16', ...
    'ROSETTA:LAP_P1_RANGE_DENS_BIAS', ...
    'ROSETTA:LAP_P1_STRATEGY_OR_RANGE', ...
    'ROSETTA:LAP_P1_RX_OR_TX', ...
    'ROSETTA:LAP_P1_ADC16_FILTER', ...
    'ROSETTA:LAP_IBIAS1', ...
    'ROSETTA:LAP_VBIAS1', ...
    'ROSETTA:LAP_P1_BIAS_MODE', ...
    'ROSETTA:LAP_P1_INITIAL_SWEEP_SMPLS', ...
    'ROSETTA:LAP_P1_SWEEP_PLATEAU_DURATION', ...
    'ROSETTA:LAP_P1_SWEEP_STEPS', ...
    'ROSETTA:LAP_P1_SWEEP_START_BIAS', ...
    'ROSETTA:LAP_P1_SWEEP_FORMAT', ...
    'ROSETTA:LAP_P1_SWEEP_RESOLUTION', ...
    'ROSETTA:LAP_P1_SWEEP_STEP_HEIGHT', ...
    'ROSETTA:LAP_P1_ADC16_DOWNSAMPLE', ...
    'ROSETTA:LAP_P1_DENSITY_FIX_DURATION', ...
    ...
    'ROSETTA:LAP_FEEDBACK_P2', ...
    'ROSETTA:LAP_P2_ADC20', ...
    'ROSETTA:LAP_P2_ADC16', ...
    'ROSETTA:LAP_P2_RANGE_DENS_BIAS', ...
    'ROSETTA:LAP_P2_STRATEGY_OR_RANGE', ...
    'ROSETTA:LAP_P2_RX_OR_TX', ...
    'ROSETTA:LAP_P2_ADC16_FILTER', ...
    'ROSETTA:LAP_IBIAS2', ...
    'ROSETTA:LAP_VBIAS2', ...
    'ROSETTA:LAP_P2_BIAS_MODE', ...
    'ROSETTA:LAP_P2_INITIAL_SWEEP_SMPLS', ...
    'ROSETTA:LAP_P2_SWEEP_PLATEAU_DURATION', ...
    'ROSETTA:LAP_P2_SWEEP_STEPS', ...
    'ROSETTA:LAP_P2_SWEEP_START_BIAS', ...
    'ROSETTA:LAP_P2_SWEEP_FORMAT', ...
    'ROSETTA:LAP_P2_SWEEP_RESOLUTION', ...
    'ROSETTA:LAP_P2_SWEEP_STEP_HEIGHT', ...
    'ROSETTA:LAP_P2_ADC16_DOWNSAMPLE', ...
    'ROSETTA:LAP_P2_DENSITY_FIX_DURATION', ...
    ...
    'ROSETTA:LAP_P1P2_ADC20_STATUS', ...
    'ROSETTA:LAP_P1P2_ADC20_MA_LENGTH', ...
    'ROSETTA:LAP_P1P2_ADC20_DOWNSAMPLE'
    };
KEY_ORDER_LIST = [GENERAL_KEY_ORDER_LIST, RPCLAP_KEY_ORDER_LIST];

% Give error if encountering any of these keys.
% Useful for obsoleted keys that should not exist anymore.
FORBIDDEN_KEYS = { ...
    'ROSETTA:LAP_INITIAL_SWEEP_SMPLS', ...
    'ROSETTA:LAP_SWEEP_PLATEAU_DURATION', ...
    'ROSETTA:LAP_SWEEP_STEPS', ...
    'ROSETTA:LAP_SWEEP_START_BIAS', ...
    'ROSETTA:LAP_SWEEP_FORMAT', ...
    'ROSETTA:LAP_SWEEP_RESOLUTION', ...
    'ROSETTA:LAP_SWEEP_STEP_HEIGHT'};

%         add_quotes_keys = { ...
%             'DESCRIPTION', ...
%             'SPACECRAFT_CLOCK_START_COUNT', ...
%             'SPACECRAFT_CLOCK_STOP_COUNT', ...
%             'INSTRUMENT_MODE_DESC', ...
%             'ROSETTA:LAP_TM_RATE', ...
%             'ROSETTA:LAP_BOOTSTRAP', ...
%             'ROSETTA:LAP_FEEDBACK_P1', ...
%             'ROSETTA:LAP_FEEDBACK_P2', ...
%             'ROSETTA:LAP_P1_ADC20', ...
%             'ROSETTA:LAP_P1_ADC16', ...
%             'ROSETTA:LAP_P1_RANGE_DENS_BIAS', ...
%             'ROSETTA:LAP_P1_STRATEGY_OR_RANGE', ...
%             'ROSETTA:LAP_P1_RX_OR_TX', ...
%             'ROSETTA:LAP_P1_ADC16_FILTER', ...
%             'ROSETTA:LAP_P1_BIAS_MODE', ...
%             'ROSETTA:LAP_P2_ADC20', ...
%             'ROSETTA:LAP_P2_ADC16', ...
%             'ROSETTA:LAP_P2_RANGE_DENS_BIAS', ...
%             'ROSETTA:LAP_P2_STRATEGY_OR_RANGE', ...
%             'ROSETTA:LAP_P2_RX_OR_TX', ...
%             'ROSETTA:LAP_P2_ADC16_FILTER', ...
%             'ROSETTA:LAP_P2_BIAS_MODE', ...
%             'ROSETTA:LAP_P1P2_ADC20_STATUS', ...
%             'ROSETTA:LAP_P1P2_ADC20_MA_LENGTH', ...
%             'ROSETTA:LAP_P1P2_ADC20_DOWNSAMPLE', ...
%             'ROSETTA:LAP_VBIAS1', ...
%             'ROSETTA:LAP_VBIAS2', ...
%             ...
%             'ROSETTA:LAP_P1_INITIAL_SWEEP_SMPLS', ...
%             'ROSETTA:LAP_P1_SWEEP_PLATEAU_DURATION', ...
%             'ROSETTA:LAP_P1_SWEEP_STEPS', ...
%             'ROSETTA:LAP_P1_SWEEP_START_BIAS', ...
%             'ROSETTA:LAP_P1_SWEEP_FORMAT', ...
%             'ROSETTA:LAP_P1_SWEEP_RESOLUTION', ...
%             'ROSETTA:LAP_P1_SWEEP_STEP_HEIGHT', ...
%             'ROSETTA:LAP_P1_ADC16_DOWNSAMPLE', ...
%             'ROSETTA:LAP_SWEEPING_P1', ...
%             ...
%             'ROSETTA:LAP_P2_FINE_SWEEP_OFFSET', ...
%             'ROSETTA:LAP_P2_INITIAL_SWEEP_SMPLS', ...
%             'ROSETTA:LAP_P2_SWEEP_PLATEAU_DURATION', ...
%             'ROSETTA:LAP_P2_SWEEP_STEPS', ...
%             'ROSETTA:LAP_P2_SWEEP_START_BIAS', ...
%             'ROSETTA:LAP_P2_SWEEP_FORMAT', ...
%             'ROSETTA:LAP_P2_SWEEP_RESOLUTION', ...
%             'ROSETTA:LAP_P2_SWEEP_STEP_HEIGHT', ...
%             'ROSETTA:LAP_P2_ADC16_DOWNSAMPLE', ...
%             'ROSETTA:LAP_SWEEPING_P2', ...
%             'ROSETTA:LAP_P2_FINE_SWEEP_OFFSET'};

% Keys for which quotes are added to the value if the values does not already have quotes.
FORCE_QUOTE_KEYS = {...
    'DESCRIPTION', ...
    'SPACECRAFT_CLOCK_START_COUNT', ...
    'SPACECRAFT_CLOCK_STOP_COUNT'};



%===========================================================================
% Put key-value pairs in certain order.
% -------------------------------------
% Look for specified keys and for those found, put them in the given order.
% NOTE: This is done for at least two reasons:
% 1) to make LBL files more "beautiful" (e.g. P1 before P2 keywords,
%    non-ROSETTA before ROSETTA keywords), and
% 2) to ensure that LBL keywords are always in approximately the same order.
%    This is useful when comparing datasets to ensure that a modified/updated
%    lapdog code produces only the desired changes to LBL files.
%===========================================================================
kvl = lib_shared_EJ.KVPL.order_by_key_list(kvl, KEY_ORDER_LIST);

%============================================================
% ASSERTION:
% Check that there are no forbidden keys.
% To ensure that obsoleted keywords are not used by mistake.
%============================================================
for i=1:length(FORBIDDEN_KEYS)
    if any(strcmp(FORBIDDEN_KEYS{i}, kvl.keys))
        error(sprintf('Trying to write LBL file header with explicitly forbidden LBL keyword "%s". This indicates that the code has previously failed to substitute these keywords for new ones.', FORBIDDEN_KEYS{i}))
    end
end


% ASSERTION: Parameter error check
if length(unique(kvl.keys)) ~= length(kvl.keys)
    error('Found doubles among the keys/ODL attribute names.')
end
if isempty(kvl.keys)                    % Not sure why checks for this specifically. Previously checked before calculating maxKeyLength.
    error('kvl.keys is empty.')
end

maxKeyLength = max(cellfun(@length, kvl.keys));

for j = 1:length(kvl.keys) % Print header of analysis file
    key   = kvl.keys{j};
    value = kvl.values{j};

    if ~ischar(value)
        error(sprintf('(key-) value is not a MATLAB string:\n key = "%s", fopen(fid) = "%s"', key, fopen(fid)))
    end
    
    if ismember(key, FORCE_QUOTE_KEYS) && ~any('"' == value)
        value = ['"', value, '"'];
    end
    
    fprintf(fid, ['%-', num2str(maxKeyLength), 's = %s\r\n'], key, value);
end

end
