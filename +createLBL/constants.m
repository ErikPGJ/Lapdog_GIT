%
% Collect Lapdog LBL constants. Must instantiate before using. Immutable.
%
%
% IMPLEMENTATION NOTE
% ===================
% Reasons for using a singleton class (instead of static methods & fields):
% 1) Can use properties/instance variables for "caching" values. Do not want to use persistent variables since they
% cause trouble when testing. NOTE: There are no proper static variables in MATLAB.
% 2) Can split up (structure, organize) configuration and validation code in methods.
% 3) The constructor can be used as initialization code which must be run before using the class/constants.
%
%
% DESIGN INTENT
% =============
% Should not take values from anywhere (through execution). ==> Should not read "global" constants (variables declared as
% "global". Ex: MISSING_CONSTANT, N_FINAL_PRESWEEP_SAMPLES
%
%
% NOTE: get_state_filenaming() is technically not relevant for LBL files, but is here anyway.
%
%
% Initially created 2018-08-22 by Erik P G Johansson, IRF Uppsala
%
classdef constants < handle
    % NOTE: Used by non-Lapdog code: ./+EJ_library/+ro/+delivery/+geom/create_geom_TAB_LBL_from_EOG.m
    %       Might be used by future standalone, "Lapdogish" code (same git repo) for e.g. separately regenerating LBL files.
    %
    % PROPOSAL: Separately hard-code constant values just as Lapdog code does (duplication).
    %   PROPOSAL: Somehow check that constants set by Lapdog (lapdog, edder_lapdog, main) use the same constant values as "constants".
    %       PROPOSAL: (1) Internal hard-coded default values (MISSING_CONSTANT, and analogous if any). Constructor which accepts the
    %                 same variables/constants as arguments and checks them (assertion) against the internal (hard-coded) values. 
    %                 (2) Constructor call that just uses internally defined values.
    % 
    %       PROPOSAL: (1) Internal hard-coded default values 
    %                 (2) Constructor that looks for and compares with the corresponding global variables, if defined.
    %
    % PROPOSAL: Include metakernel_rosetta.txt
    %   PRO:/NOTE: Used by lapdog_convention_wrapper, get_lapdog_metakernel.
    %
    % PROPOSAL: Move to EJ_library for sharing with private MATLAB directory.    
    %   NOTE: get_state_filenaming is very much connected to Lapdog, but is also used by non-Lapdog code
    %       rerun_analysis_createLBL which is a Lapdog utility associated with Lapdog and that requires access to Lapdog anyway.
    %   PROPOSAL: Let get_state_filenaming be part of Lapdog/createLBL, not EJ_library.

    properties(Access=public)
        ROSETTA_NAIF_ID          = -226;           % Used by SPICE.
        ODL_INDENTATION_LENGTH   = 4;
        MISSING_CONSTANT         = -1000000000;    % Same as global variable MISSING_CONSTANT. Defined here so that it can be used by code that is not run/initialized via Lapdog.
        N_FINAL_PRESWEEP_SAMPLES = 16;             % Number of pre-sweep samples to have. Unused samples positions are set to MISSING_CONSTANT.

        % When splitting "index" into multiple parts (.mat files) for saving to disk, this is how large every part
        % should be, in number of index values.
        %
        % NOTE: Lapdog's ESC2 "index" variable is size "1x661300" and there have been times when it has been both
        % possible and not possible to save it, so it is probably close to the limit.
        % NOTE: The true upper limit may depend on the length of strings, in particular paths stored in "index". Should
        % maybe therefore lower the value to have more margin.
        %N_INDEX_INDICES_PER_PART = 662000;       % Has failed for ESC2, ESC3 ~2019-05-15.
        N_INDEX_INDICES_PER_PART = 200000;
        
        % Used by createLBL.create_OBJTABLE_LBL_file (COTLF).
        COTLF_SETTINGS   % Set in constructor
        
        % Used for PDS keywords which are added to/included in LBL files, but whose values are not set by Lapdog. In
        % practise, these should be overwritten by Erik P G Johansson's "delivery code" (not included in Lapdog) before
        % actual delivery.
        % NOTE: Not inherently quoted. Usage may require adding quotes.
        VALUE_NOT_SET_BY_LAPDOG  = '"<UNSET>"';
    end



    methods(Access=public)
        
        
        
        % Constructor
        % 
        function obj = constants(varargin)

            % ASSERTION: Find calls with non-zero number of arguments (old format).
            if nargin ~= 0
                error('Wrong number of arguments.')
            end
            
            % ASSERTION: Compare with global constant which should have the same value.
            % NOTE: __Not__ intended to create a global variables that already exists.
            if ismember('MISSING_CONSTANT', who('global'))
                % CASE: MISSING_CONSTANT is already a global constant, although it might not have been declared as
                % such in the current workspace.
                global MISSING_CONSTANT
                if obj.MISSING_CONSTANT ~= MISSING_CONSTANT
                    error('Global variable MISSING_CONSTANT inconsistent with internally hard-coded MISSING_CONSTANT.')
                end                                
            end
            
            
            
            %==================================================================
            % LBL Header keys which should preferably come in a certain order.
            % Not all of them are required to be present.
            %==================================================================
            % Keywords which are quite independent of type of file.
            GENERAL_KEY_ORDER_LIST = { ...
                'PDS_VERSION_ID', ...        % The PDS standard requires this to be first, I think.
                'DESCRIPTION', ...           % High up, so that easy to find.
                'LABEL_REVISION_NOTE', ...   % High up, due to Review 2019 RID.
                ...
                'RECORD_TYPE', ...
                'RECORD_BYTES', ...
                'FILE_RECORDS', ...
                'FILE_NAME', ...
                '^TABLE', ...
                'DATA_SET_ID', ...
                'DATA_SET_NAME', ...
                'DATA_QUALITY_ID', ...
                'MISSION_ID', ...
                'MISSION_NAME', ...
                'MISSION_PHASE_NAME', ...
                'PRODUCER_INSTITUTION_NAME', ...
                'PRODUCER_ID', ...
                'PRODUCER_FULL_NAME', ...
                'PRODUCT_ID', ...
                'PRODUCT_TYPE', ...
                'PRODUCT_CREATION_TIME', ...
                'INSTRUMENT_HOST_ID', ...
                'INSTRUMENT_HOST_NAME', ...
                'INSTRUMENT_NAME', ...
                'INSTRUMENT_ID', ...
                'INSTRUMENT_TYPE', ...
                'INSTRUMENT_MODE_ID', ...
                'INSTRUMENT_MODE_DESC', ...
                'TARGET_NAME', ...
                'TARGET_TYPE', ...
                'PROCESSING_LEVEL_ID', ...
                'START_TIME', ...
                'STOP_TIME', ...
                'SPACECRAFT_CLOCK_START_COUNT', ...
                'SPACECRAFT_CLOCK_STOP_COUNT'};
            % Keywords which refer to very specific settings.
            RPCLAP_KEY_ORDER_LIST = { ...
                'ROSETTA:LAP_TM_RATE', ...
                'ROSETTA:LAP_BOOTSTRAP', ...
                ...
                'ROSETTA:LAP_FEEDBACK_P1', ...
                'ROSETTA:LAP_P1_ADC20', ...
                'ROSETTA:LAP_P1_ADC16', ...
                'ROSETTA:LAP_P1_RANGE_DENS_BIAS', ...
                'ROSETTA:LAP_P1_STRATEGY_OR_RANGE', ...
                'ROSETTA:LAP_P1_RX_OR_TX', ...
                'ROSETTA:LAP_P1_ADC16_FILTER', ...
                'ROSETTA:LAP_IBIAS1', ...
                'ROSETTA:LAP_VBIAS1', ...
                'ROSETTA:LAP_P1_BIAS_MODE', ...
                'ROSETTA:LAP_P1_INITIAL_SWEEP_SMPLS', ...
                'ROSETTA:LAP_P1_SWEEP_PLATEAU_DURATION', ...
                'ROSETTA:LAP_P1_SWEEP_STEPS', ...
                'ROSETTA:LAP_P1_SWEEP_START_BIAS', ...
                'ROSETTA:LAP_P1_SWEEP_FORMAT', ...
                'ROSETTA:LAP_P1_SWEEP_RESOLUTION', ...
                'ROSETTA:LAP_P1_SWEEP_STEP_HEIGHT', ...
                'ROSETTA:LAP_P1_ADC16_DOWNSAMPLE', ...
                'ROSETTA:LAP_P1_EFIELD_FIX_DURATION', ...
                'ROSETTA:LAP_SWEEPING_P1', ...
                'ROSETTA:LAP_P1_DENSITY_FIX_DURATION', ...
                ...
                'ROSETTA:LAP_FEEDBACK_P2', ...
                'ROSETTA:LAP_P2_ADC20', ...
                'ROSETTA:LAP_P2_ADC16', ...
                'ROSETTA:LAP_P2_RANGE_DENS_BIAS', ...
                'ROSETTA:LAP_P2_STRATEGY_OR_RANGE', ...
                'ROSETTA:LAP_P2_RX_OR_TX', ...
                'ROSETTA:LAP_P2_ADC16_FILTER', ...
                'ROSETTA:LAP_IBIAS2', ...
                'ROSETTA:LAP_VBIAS2', ...
                'ROSETTA:LAP_P2_BIAS_MODE', ...
                'ROSETTA:LAP_P2_INITIAL_SWEEP_SMPLS', ...
                'ROSETTA:LAP_P2_SWEEP_PLATEAU_DURATION', ...
                'ROSETTA:LAP_P2_SWEEP_STEPS', ...
                'ROSETTA:LAP_P2_SWEEP_START_BIAS', ...
                'ROSETTA:LAP_P2_SWEEP_FORMAT', ...
                'ROSETTA:LAP_P2_SWEEP_RESOLUTION', ...
                'ROSETTA:LAP_P2_SWEEP_STEP_HEIGHT', ...
                'ROSETTA:LAP_P2_ADC16_DOWNSAMPLE', ...
                'ROSETTA:LAP_P2_EFIELD_FIX_DURATION', ...
                'ROSETTA:LAP_SWEEPING_P2', ...
                'ROSETTA:LAP_P2_DENSITY_FIX_DURATION', ...
                ...
                'ROSETTA:LAP_P1P2_ADC20_STATUS', ...
                'ROSETTA:LAP_P1P2_ADC20_MA_LENGTH', ...
                'ROSETTA:LAP_P1P2_ADC20_DOWNSAMPLE'
                };
            KEY_ORDER_LIST = [GENERAL_KEY_ORDER_LIST, RPCLAP_KEY_ORDER_LIST];
            
            % Give error if encountering any of these keys.
            % Useful for obsoleted keys that should not exist anymore.
            FORBIDDEN_KEYS = { ...
                'ROSETTA:LAP_INITIAL_SWEEP_SMPLS', ...
                'ROSETTA:LAP_SWEEP_PLATEAU_DURATION', ...
                'ROSETTA:LAP_SWEEP_STEPS', ...
                'ROSETTA:LAP_SWEEP_START_BIAS', ...
                'ROSETTA:LAP_SWEEP_FORMAT', ...
                'ROSETTA:LAP_SWEEP_RESOLUTION', ...
                'ROSETTA:LAP_SWEEP_STEP_HEIGHT'};
            
            %         ADD_QUOTES_KEYS = { ...
            %             'DESCRIPTION', ...
            %             'SPACECRAFT_CLOCK_START_COUNT', ...
            %             'SPACECRAFT_CLOCK_STOP_COUNT', ...
            %             'INSTRUMENT_MODE_DESC', ...
            %             'ROSETTA:LAP_TM_RATE', ...
            %             'ROSETTA:LAP_BOOTSTRAP', ...
            %             'ROSETTA:LAP_FEEDBACK_P1', ...
            %             'ROSETTA:LAP_FEEDBACK_P2', ...
            %             'ROSETTA:LAP_P1_ADC20', ...
            %             'ROSETTA:LAP_P1_ADC16', ...
            %             'ROSETTA:LAP_P1_RANGE_DENS_BIAS', ...
            %             'ROSETTA:LAP_P1_STRATEGY_OR_RANGE', ...
            %             'ROSETTA:LAP_P1_RX_OR_TX', ...
            %             'ROSETTA:LAP_P1_ADC16_FILTER', ...
            %             'ROSETTA:LAP_P1_BIAS_MODE', ...
            %             'ROSETTA:LAP_P2_ADC20', ...
            %             'ROSETTA:LAP_P2_ADC16', ...
            %             'ROSETTA:LAP_P2_RANGE_DENS_BIAS', ...
            %             'ROSETTA:LAP_P2_STRATEGY_OR_RANGE', ...
            %             'ROSETTA:LAP_P2_RX_OR_TX', ...
            %             'ROSETTA:LAP_P2_ADC16_FILTER', ...
            %             'ROSETTA:LAP_P2_BIAS_MODE', ...
            %             'ROSETTA:LAP_P1P2_ADC20_STATUS', ...
            %             'ROSETTA:LAP_P1P2_ADC20_MA_LENGTH', ...
            %             'ROSETTA:LAP_P1P2_ADC20_DOWNSAMPLE', ...
            %             'ROSETTA:LAP_VBIAS1', ...
            %             'ROSETTA:LAP_VBIAS2', ...
            %             ...
            %             'ROSETTA:LAP_P1_INITIAL_SWEEP_SMPLS', ...
            %             'ROSETTA:LAP_P1_SWEEP_PLATEAU_DURATION', ...
            %             'ROSETTA:LAP_P1_SWEEP_STEPS', ...
            %             'ROSETTA:LAP_P1_SWEEP_START_BIAS', ...
            %             'ROSETTA:LAP_P1_SWEEP_FORMAT', ...
            %             'ROSETTA:LAP_P1_SWEEP_RESOLUTION', ...
            %             'ROSETTA:LAP_P1_SWEEP_STEP_HEIGHT', ...
            %             'ROSETTA:LAP_P1_ADC16_DOWNSAMPLE', ...
            %             'ROSETTA:LAP_SWEEPING_P1', ...
            %             ...
            %             'ROSETTA:LAP_P2_FINE_SWEEP_OFFSET', ...
            %             'ROSETTA:LAP_P2_INITIAL_SWEEP_SMPLS', ...
            %             'ROSETTA:LAP_P2_SWEEP_PLATEAU_DURATION', ...
            %             'ROSETTA:LAP_P2_SWEEP_STEPS', ...
            %             'ROSETTA:LAP_P2_SWEEP_START_BIAS', ...
            %             'ROSETTA:LAP_P2_SWEEP_FORMAT', ...
            %             'ROSETTA:LAP_P2_SWEEP_RESOLUTION', ...
            %             'ROSETTA:LAP_P2_SWEEP_STEP_HEIGHT', ...
            %             'ROSETTA:LAP_P2_ADC16_DOWNSAMPLE', ...
            %             'ROSETTA:LAP_SWEEPING_P2', ...
            %             'ROSETTA:LAP_P2_FINE_SWEEP_OFFSET'};
            
            % Keys for which quotes are added to the value if the values does not already have quotes.
            FORCE_QUOTE_KEYS = {...
                'DESCRIPTION', ...
                'SPACECRAFT_CLOCK_START_COUNT', ...
                'SPACECRAFT_CLOCK_STOP_COUNT'};
            
            
            
            S = [];
            S.indentationLength         = obj.ODL_INDENTATION_LENGTH;
            S.spacecraftNaifSpiceId     = obj.ROSETTA_NAIF_ID;
            S.tabLblInconsistencyPolicy = 'error';
            S.contentRowMaxLength       = 80-2;            % Number excludes line break characters.
            S.formatNotDerivedValue     = '<UNSET>';       % Value used to replace FORMAT, when setting automatically fails.
            S.emptyUnitDefault          = 'N/A';           % Value used to replace empty UNIT.
            S.nBytesBetweenColumns      = length(', ');    % ASSUMES absence of quotes in string columns. Lapdog convention.
            S.headerKeysForbiddenList   = FORBIDDEN_KEYS;
            S.headerKeysForceQuotesList = FORCE_QUOTE_KEYS;
            S.headerKeysOrderList       = KEY_ORDER_LIST;
            obj.COTLF_SETTINGS = S;
        end
        
        
        
        % Construct list of key-value pairs to use for all LBL files.
        % 
        % Keys must not collide with keys set for specific file types.
        % For file types that read EDITED1/CALIB1 LBL files, must overwrite old keys(!).
        %
        % NOTE: Only keys that already exist in the CALIB files that are read (otherwise intentional error)
        %       and which are thus overwritten.
        % NOTE: Might not be complete.
        % NOTE: Contains many hardcoded constants, but not only.
        % NOTE: Does not contain timestamps (START/STOP_TIME, SPACECRAFT_CLOCK_START/STOP_COUNT).
        %
        % NOTE: Will not correctly assign all values, since they are overwritten in delivery code anyway. Simplifies
        % this code, and reduces the number of arguments. This however increases the number of errors if validating
        % EDDER/DERIV1 (not EDITED2/CALIB2/DERIV2) LBL files with e.g. "pvv label".
        
        function LblHeaderAllKvpl = get_LblHeaderAllKvpl(obj)
            % PROPOSAL: Use generate_PDS_data?
            % PROPOSAL: Change name. Something with "keywords" and not LBL only, which may refer to entire file.
            %
            % TODO-NEED-INFO: Required to add something like NOTE = "Cheops Reference Frame" ?
            
            % IMPLEMENTATION NOTE: Including un-set LABEL_REVISION_NOTE meant to always be overwritten by other code. If
            % it is not overwritten, then create_OBJTABLE_LBL_file will give error.
            LblHeaderAllKvpl = EJ_library.utils.KVPL2({
                'PDS_VERSION_ID',            'PDS3'; ...
                'DATA_QUALITY_ID',           obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'PRODUCT_CREATION_TIME',     datestr(now, 'yyyy-mm-ddTHH:MM:SS.FFF'); ...
                'PRODUCT_TYPE',              obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'PROCESSING_LEVEL_ID',       obj.VALUE_NOT_SET_BY_LAPDOG; ...
                ...
                'DATA_SET_ID',               obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'DATA_SET_NAME',             obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'LABEL_REVISION_NOTE',       []; ...                                       % NOTE: Meant to trigger error if not overwritten.
                'PRODUCER_FULL_NAME',        obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'PRODUCER_ID',               obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'PRODUCER_INSTITUTION_NAME', '"SWEDISH INSTITUTE OF SPACE PHYSICS, UPPSALA"'; ...
                'INSTRUMENT_HOST_ID',        'RO'; ...
                'INSTRUMENT_HOST_NAME',      '"ROSETTA-ORBITER"'; ...
                'INSTRUMENT_NAME',           '"ROSETTA PLASMA CONSORTIUM - LANGMUIR PROBE"'; ...
                'INSTRUMENT_TYPE',           '"PLASMA INSTRUMENT"'; ...
                'INSTRUMENT_ID',             'RPCLAP'; ...
                'TARGET_NAME',               obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'TARGET_TYPE',               obj.VALUE_NOT_SET_BY_LAPDOG; ...
                'MISSION_ID',                'ROSETTA'; ...
                'MISSION_NAME',              '"INTERNATIONAL ROSETTA MISSION"'; ...
                'MISSION_PHASE_NAME',        obj.VALUE_NOT_SET_BY_LAPDOG; ...                
                }    ...
            );
        end
        
    end    % methods(Access=public)

    
    
    methods(Static, Access=public)
        
        % Defines the ~filenaming convention for state files.
        function [accVarsFile, inaccVarsFile, indexPathPrefix] = get_state_filenaming(parentDir, stateNaming)

            switch(stateNaming)
                case 'pre-analysis'
                    base = 'pre_analysis_workspace.';
                case 'pre-createLBL'
                    base = 'pre_createLBL_workspace.';
                otherwise
                    error('Illegal stateNaming="%s"', stateNaming)
            end

            accVarsFile     = fullfile(parentDir, [base, 'accessible.mat'  ]);
            inaccVarsFile   = fullfile(parentDir, [base, 'inaccessible.mat']);
            indexPathPrefix = fullfile(parentDir, [base, 'index.'          ]);    % NOTE: Period at end since the file suffix (file type) will note be directly appended, but indirectly.
        end

    end    % methods(Static, Access=public)
    
end    % classdef
